
using "anothertest.mpir"

funcdef two :: Integer → TwoInt
funcdef two x
    return(2)
suchthat:
    |    doc as "returns two"
end

funcdef multiply_show :: SmallInt → Integer
funcdef multiply_show x
    let z as SmallInt
    set z as 5
    let x as SmallInt
    set x as 5 + z + two(1)
    return(z)
suchthat:
    |    doc x as "First Integer"
    |    doc y as "Second Integer"
    |    doc z as "Product of X & Y"
    |    doc as "Function to show product of 2 integers"
end

typedef SmallInt a :: Integer {0 < a ^ a < 100}

typedef TwoInt a :: Integer {1 < a ^ a < 3}
