
using "anothertest.mpir"

funcdef divide :: TypeInt, TypeInt â†’ TypeInt
funcdef divide ðŸ”¥, y = ðŸ”¥ / y
suchthat:
    |    doc ðŸ”¥ as "First Integer"
    |    doc y as "Second Integer"
    |    doc as "Function to divide 2 numbers"
end

funcdef multiply_show :: TypeInt, TypeInt  â†’ TypeInt
funcdef multiply_show x y
    let z as TypeInt
    set z as 1 * 2 * 3 * 4
    function(nuts, balls)
    show(z)
    return(z)
suchthat:
    |    doc x as "First Integer"
    |    doc y as "Second Integer"
    |    doc z as "Product of X & Y"
    |    doc as "Function to show product of 2 integers"
end

typedef NewInt a :: Int
typedef a : Int {âˆ€x : x == 1}
typedef a : Int {âˆƒx : x>=-35.0}
